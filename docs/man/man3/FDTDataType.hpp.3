.TH "src/FDTDataType.hpp" 3 "Tue Jan 17 2023" "Version 00.01a03-dbg" "Freecraft" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/FDTDataType.hpp
.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBFDTData\fP"
.br
.RI "base class of data\&. "
.ti -1c
.RI "class \fBFDTInt\fP"
.br
.ti -1c
.RI "class \fBFDTShort\fP"
.br
.ti -1c
.RI "class \fBFDTFloat\fP"
.br
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum class \fBFDTDataTag\fP { \fBFDTNone\fP, \fBFDTShort\fP, \fBFDTInt\fP, \fBFDTLong\fP, \fBFDTLongLong\fP, \fBFDTUnsignedShort\fP, \fBFDTUnsignedInt\fP, \fBFDTUnsignedLong\fP, \fBFDTUnsignedLongLong\fP, \fBFDTFloat\fP, \fBFDTDouble\fP, \fBFDTChar\fP, \fBFDTUnsignedChar\fP, \fBFDTWChar\fP, \fBFDTChar16\fP, \fBFDTChar32\fP }"
.br
.RI "tags of data\&. "
.in -1c
.SH "Enumeration Type Documentation"
.PP 
.SS "enum class \fBFDTDataTag\fP\fC [strong]\fP"

.PP
tags of data\&. 
.PP
\fBAuthor\fP
.RS 4
Promesis 
.RE
.PP

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIFDTNone \fP\fP
none 
.TP
\fB\fIFDTShort \fP\fP
short 
.TP
\fB\fIFDTInt \fP\fP
int 
.TP
\fB\fIFDTLong \fP\fP
long 
.TP
\fB\fIFDTLongLong \fP\fP
long long 
.TP
\fB\fIFDTUnsignedShort \fP\fP
unsigned short 
.TP
\fB\fIFDTUnsignedInt \fP\fP
unsigned int 
.TP
\fB\fIFDTUnsignedLong \fP\fP
unsigned long 
.TP
\fB\fIFDTUnsignedLongLong \fP\fP
unsigned long long 
.TP
\fB\fIFDTFloat \fP\fP
float 
.TP
\fB\fIFDTDouble \fP\fP
double 
.TP
\fB\fIFDTChar \fP\fP
char 
.TP
\fB\fIFDTUnsignedChar \fP\fP
unsigned char 
.TP
\fB\fIFDTWChar \fP\fP
wchar_t 
.TP
\fB\fIFDTChar16 \fP\fP
char16_t 
.TP
\fB\fIFDTChar32 \fP\fP
char32_t 
.PP
Definition at line \fB13\fP of file \fBFDTDataType\&.hpp\fP\&..PP
.nf
14 {
16     FDTNone,
18     FDTShort,
20     FDTInt,
22     FDTLong,
24     FDTLongLong,
26     FDTUnsignedShort,
28     FDTUnsignedInt,
30     FDTUnsignedLong,
32     FDTUnsignedLongLong,
34     FDTFloat,
36     FDTDouble,
38     FDTChar,
40     FDTUnsignedChar,
42     FDTWChar,
44     FDTChar16,
46     FDTChar32
47 
48 };
.fi

.SH "Author"
.PP 
Generated automatically by Doxygen for Freecraft from the source code\&.

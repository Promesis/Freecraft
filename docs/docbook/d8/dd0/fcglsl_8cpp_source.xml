<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_fcglsl_8cpp_source" xml:lang="en-US">
<title>fcglsl.cpp</title>
<indexterm><primary>src/graphics/fcglsl.cpp</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_fcglsl_8cpp_source_1l00001"/>00001 
<anchor xml:id="_fcglsl_8cpp_source_1l00013"/>00013 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_fcglsl_8hpp">fcglsl.hpp</link>&quot;</emphasis>
<anchor xml:id="_fcglsl_8cpp_source_1l00014"/>00014 
<anchor xml:id="_fcglsl_8cpp_source_1l00015"/>00015 <emphasis role="keywordtype">void</emphasis>&#32;fcgraphics::readGLSL(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*filename,&#32;std::string&#32;&amp;str)
<anchor xml:id="_fcglsl_8cpp_source_1l00016"/>00016 {
<anchor xml:id="_fcglsl_8cpp_source_1l00017"/>00017 &#32;&#32;&#32;&#32;std::ifstream&#32;fin;
<anchor xml:id="_fcglsl_8cpp_source_1l00018"/>00018 &#32;&#32;&#32;&#32;fin.open(filename);
<anchor xml:id="_fcglsl_8cpp_source_1l00019"/>00019 &#32;&#32;&#32;&#32;std::string&#32;s;
<anchor xml:id="_fcglsl_8cpp_source_1l00020"/>00020 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>(std::getline(fin,s))
<anchor xml:id="_fcglsl_8cpp_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;str&#32;+=&#32;s+<emphasis role="charliteral">&apos;\n&apos;</emphasis>;
<anchor xml:id="_fcglsl_8cpp_source_1l00022"/>00022 }
<anchor xml:id="_fcglsl_8cpp_source_1l00023"/>00023 
<anchor xml:id="_fcglsl_8cpp_source_1l00024"/>00024 <emphasis role="keywordtype">void</emphasis>&#32;fcgraphics::compileGLSL(<emphasis role="keyword">const</emphasis>&#32;GLchar&#32;*&#32;<emphasis role="keyword">const</emphasis>&#32;*GLSL,&#32;GLuint&#32;&amp;shader,&#32;GLenum&#32;type)
<anchor xml:id="_fcglsl_8cpp_source_1l00025"/>00025 {
<anchor xml:id="_fcglsl_8cpp_source_1l00026"/>00026 &#32;&#32;&#32;&#32;shader&#32;=&#32;glCreateShader(type);
<anchor xml:id="_fcglsl_8cpp_source_1l00027"/>00027 &#32;&#32;&#32;&#32;glShaderSource(shader,&#32;1,&#32;GLSL,&#32;NULL);
<anchor xml:id="_fcglsl_8cpp_source_1l00028"/>00028 &#32;&#32;&#32;&#32;glCompileShader(shader);
<anchor xml:id="_fcglsl_8cpp_source_1l00029"/>00029 
<anchor xml:id="_fcglsl_8cpp_source_1l00030"/>00030 &#32;&#32;&#32;&#32;GLint&#32;success;
<anchor xml:id="_fcglsl_8cpp_source_1l00031"/>00031 &#32;&#32;&#32;&#32;GLchar&#32;infoLog[512];
<anchor xml:id="_fcglsl_8cpp_source_1l00032"/>00032 &#32;&#32;&#32;&#32;glGetShaderiv(shader,&#32;GL_COMPILE_STATUS,&#32;&amp;success);
<anchor xml:id="_fcglsl_8cpp_source_1l00033"/>00033 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;!success&#32;)
<anchor xml:id="_fcglsl_8cpp_source_1l00034"/>00034 &#32;&#32;&#32;&#32;{
<anchor xml:id="_fcglsl_8cpp_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;glGetShaderInfoLog(shader,&#32;512,&#32;NULL,&#32;infoLog);
<anchor xml:id="_fcglsl_8cpp_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;OpenGL&#32;shader&#32;failed&quot;</emphasis>&#32;&lt;&lt;&#32;std::endl&#32;&#32;
<anchor xml:id="_fcglsl_8cpp_source_1l00037"/>00037 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;infoLog&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="_fcglsl_8cpp_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="_fcglsl_8cpp_source_1l00039"/>00039 &#32;&#32;&#32;&#32;}
<anchor xml:id="_fcglsl_8cpp_source_1l00040"/>00040 &#32;&#32;&#32;&#32;
<anchor xml:id="_fcglsl_8cpp_source_1l00041"/>00041 }
</programlisting></section>

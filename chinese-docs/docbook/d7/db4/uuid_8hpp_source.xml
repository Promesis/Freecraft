<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_uuid_8hpp_source" xml:lang="zh">
<title>uuid.hpp</title>
<indexterm><primary>src/data/uuid/uuid.hpp</primary></indexterm>
浏览该文件的文档.<programlisting linenumbering="unnumbered"><anchor xml:id="_uuid_8hpp_source_1l00001"/>00001 <emphasis role="preprocessor">#ifndef&#32;uuid_hpp</emphasis>
<anchor xml:id="_uuid_8hpp_source_1l00002"/>00002 <emphasis role="preprocessor">#define&#32;uuid_hpp</emphasis>
<anchor xml:id="_uuid_8hpp_source_1l00003"/>00003 
<anchor xml:id="_uuid_8hpp_source_1l00004"/>00004 <emphasis role="preprocessor">#include&#32;&quot;json/json.h&quot;</emphasis>
<anchor xml:id="_uuid_8hpp_source_1l00005"/>00005 <emphasis role="preprocessor">#include&#32;&quot;../../fcexceptions.hpp&quot;</emphasis>
<anchor xml:id="_uuid_8hpp_source_1l00006"/>00006 
<anchor xml:id="_uuid_8hpp_source_1l00007"/>00007 <emphasis role="preprocessor">#include&#32;&lt;string&gt;</emphasis>
<anchor xml:id="_uuid_8hpp_source_1l00008"/>00008 <emphasis role="preprocessor">#include&#32;&lt;random&gt;</emphasis>
<anchor xml:id="_uuid_8hpp_source_1l00009"/>00009 
<anchor xml:id="_uuid_8hpp_source_1l00010"/>00010 <emphasis role="comment">//xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx</emphasis>
<anchor xml:id="_uuid_8hpp_source_1l00011"/><link linkend="_classuuid">00011</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_classuuid">uuid</link>
<anchor xml:id="_uuid_8hpp_source_1l00012"/>00012 {
<anchor xml:id="_uuid_8hpp_source_1l00013"/>00013 &#32;&#32;&#32;&#32;<emphasis role="keyword">protected</emphasis>:
<anchor xml:id="_uuid_8hpp_source_1l00014"/><link linkend="_classuuid_1aad814226a0ef1188e55780c0d6b4ca13">00014</link> &#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;<link linkend="_classuuid_1aad814226a0ef1188e55780c0d6b4ca13">data</link>[37];
<anchor xml:id="_uuid_8hpp_source_1l00015"/>00015 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
<anchor xml:id="_uuid_8hpp_source_1l00020"/>00020 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_classuuid_1a26da1fd9a1991859c54aceb9f88492e2">setrandomly</link>(<emphasis role="keywordtype">void</emphasis>);
<anchor xml:id="_uuid_8hpp_source_1l00025"/>00025 &#32;&#32;&#32;&#32;<link linkend="_classuuid_1ab1dafae8a5a3a3efc326afaf607a4747">uuid</link>(<emphasis role="keywordtype">void</emphasis>);
<anchor xml:id="_uuid_8hpp_source_1l00031"/>00031 &#32;&#32;&#32;&#32;<link linkend="_classuuid_1ab1dafae8a5a3a3efc326afaf607a4747">uuid</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_classuuid">uuid</link>&#32;&amp;dat);
<anchor xml:id="_uuid_8hpp_source_1l00037"/>00037 &#32;&#32;&#32;&#32;<link linkend="_classuuid_1ab1dafae8a5a3a3efc326afaf607a4747">uuid</link>(<emphasis role="keyword">const</emphasis>&#32;Json::String&#32;&amp;str);
<anchor xml:id="_uuid_8hpp_source_1l00044"/>00044 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_classuuid">uuid</link>&#32;&amp;<link linkend="_classuuid_1a070227fb137d354bf8b909d87a06af14">operator=</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_classuuid">uuid</link>&#32;&amp;dat);
<anchor xml:id="_uuid_8hpp_source_1l00052"/>00052 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classuuid_1adb36eb924610352d2d838c1226d70b70">operator==</link>(<emphasis role="keyword">const</emphasis>&#32;<link linkend="_classuuid">uuid</link>&#32;&amp;dat)&#32;<emphasis role="keyword">const</emphasis>;
<anchor xml:id="_uuid_8hpp_source_1l00061"/>00061 &#32;&#32;&#32;&#32;<emphasis role="keyword">friend</emphasis>&#32;<emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_classuuid_1adb36eb924610352d2d838c1226d70b70">operator==</link>(<emphasis role="keyword">const</emphasis>&#32;Json::String&#32;&amp;datL,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_classuuid">uuid</link>&#32;&amp;datR);
<anchor xml:id="_uuid_8hpp_source_1l00062"/>00062 &#32;&#32;&#32;&#32;
<anchor xml:id="_uuid_8hpp_source_1l00063"/>00063 &#32;&#32;&#32;&#32;<emphasis role="comment">//const&#32;Json::String&#32;&amp;getuuid(void)&#32;const;</emphasis>
<anchor xml:id="_uuid_8hpp_source_1l00068"/>00068 <emphasis role="comment"></emphasis>&#32;&#32;&#32;&#32;<emphasis role="keyword">operator</emphasis>&#32;Json::String(<emphasis role="keywordtype">void</emphasis>)&#32;<emphasis role="keyword">const</emphasis>;
<anchor xml:id="_uuid_8hpp_source_1l00069"/>00069 };
<anchor xml:id="_uuid_8hpp_source_1l00070"/>00070 
<anchor xml:id="_uuid_8hpp_source_1l00071"/>00071 <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_uuid_8hpp_1adb36eb924610352d2d838c1226d70b70">operator==</link>(<emphasis role="keyword">const</emphasis>&#32;Json::String&#32;&amp;datL,&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_classuuid">uuid</link>&#32;&amp;datR);
<anchor xml:id="_uuid_8hpp_source_1l00072"/>00072 
<anchor xml:id="_uuid_8hpp_source_1l00073"/>00073 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
